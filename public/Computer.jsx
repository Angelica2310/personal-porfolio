/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 computer.gltf 
Author: Alex Araujo (https://sketchfab.com/skymoondxd)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/pink-computer-e788c1c50cc346ca8037a8b02e82386c
Title: Pink Computer
*/
"use client";
import React from "react";
import { useGLTF } from "@react-three/drei";
import { Leva, useControls } from "leva";
import { useMediaQuery } from "react-responsive";

export default function Model(props) {
  const { nodes, materials } = useGLTF("/computer.gltf");
  const isTablet = useMediaQuery({ maxWidth: 1500 });
  // const x = useControls({
  //   positionX: {
  //     value: 2.5,
  //     min: -10,
  //     max: 10,
  //   },
  //   positionY: {
  //     value: 2.5,
  //     min: -10,
  //     max: 10,
  //   },
  //   positionZ: {
  //     value: 2.5,
  //     min: -10,
  //     max: 10,
  //   },
  //   rotationX: {
  //     value: 0,
  //     min: -10,
  //     max: 10,
  //   },
  //   rotationY: {
  //     value: 0,
  //     min: -10,
  //     max: 10,
  //   },
  //   rotationZ: {
  //     value: 0,
  //     min: -10,
  //     max: 10,
  //   },
  //   scale: {
  //     value: 1,
  //     min: -10,
  //     max: 10,
  //   },
  // });

  return (
    <group {...props} dispose={null}>
      <group
        // scale={0.3}
        position={isTablet ? [2, -2.1, -10] : [0.1, -2.7, -6.7]}
        rotation={isTablet ? [0.4, -0.2, 0] : [0.3, -0.4, 0]}
        scale={isTablet ? 0.9 : 1.1}
        // position={[x.positionX, x.positionY, x.positionZ]}
        // rotation={[x.rotationX, x.rotationY, x.rotationZ]}
        // scale={x.scale}
      >
        <group>
          <mesh
            geometry={nodes.pCylinder2_scroll_0.geometry}
            rotation={[-Math.PI, 0, -Math.PI]}
            material={materials.scroll}
          />
          <mesh
            geometry={nodes.pCylinder2_mouse_0.geometry}
            material={materials.mouse}
          />
        </group>
        <group position={[0, 0.171, 0]}>
          <mesh
            geometry={nodes.pCube94_teclado_0.geometry}
            material={materials.teclado}
          />
          <mesh
            geometry={nodes.pCube94_corpo_do_teclado_0.geometry}
            material={materials.corpo_do_teclado}
          />
        </group>
        <group
          position={[-8.923, -0.636, -1.61]}
          rotation={[0, Math.PI / 2, 0]}
          scale={2.297}
        >
          <mesh
            geometry={nodes.gabinetepCube14_gabinetevidro_0.geometry}
            material={materials.gabinetevidro}
          />
          <mesh
            geometry={nodes.gabinetepCube14_lambert1_0.geometry}
            material={materials.lambert1}
          />
          <mesh
            geometry={nodes.gabinetepCube14_gabineteborda_da_placa_0.geometry}
            material={materials.gabineteborda_da_placa}
          />
          <mesh
            geometry={
              nodes.gabinetepCube14_gabinetecentro_preto_da_placa_0.geometry
            }
            material={materials.gabinetecentro_preto_da_placa}
          />
          <mesh
            geometry={nodes.gabinetepCube14_gabinetebase_0.geometry}
            material={materials.gabinetebase}
          />
          <mesh
            geometry={nodes.gabinetepCube14_gabinetevento_0.geometry}
            material={materials.gabinetevento}
          />
          <mesh
            geometry={nodes.gabinetepCube14_gabinetecorpo_vento_0.geometry}
            material={materials.gabinetecorpo_vento}
          />
          <mesh
            geometry={nodes.gabinetepCube14_gabinetepreto_0.geometry}
            material={materials.gabinetepreto}
          />
          <mesh
            geometry={nodes.gabinetepCube14_gabinetepreto_de_novo_0.geometry}
            material={materials.gabinetepreto_de_novo}
          />
          <mesh
            geometry={nodes.gabinetepCube14_gabineteprata_0.geometry}
            material={materials.gabineteprata}
          />
        </group>
        <group
          position={[-0.023, 3.798, -4.878]}
          rotation={[-Math.PI, 0, -Math.PI]}
          scale={[9.223, 4.632, 0.268]}
        >
          <mesh
            geometry={nodes.tvpCube1_tvcorpo2_tv_0.geometry}
            material={materials.tvcorpo2_tv}
          />
          <mesh
            geometry={nodes.tvpCube1_tvcorpo_da_tv_0.geometry}
            material={materials.tvcorpo_da_tv}
          />
          <mesh
            geometry={nodes.tvpCube1_tvtela_da_tv_0.geometry}
            material={materials.tvtela_da_tv}
          />
          <mesh
            geometry={nodes.tvpCube1_tvpes_da_tv1_0.geometry}
            material={materials.tvpes_da_tv1}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/computer.gltf");
